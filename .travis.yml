language: rust

os:
- linux
- osx

rust:
  - stable
  - beta
  - nightly

cache:
  bundler: true
  directories:
    - /home/travis/.cargo

before_cache:
  - rm -rf /home/travis/.cargo/registry

before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then rvm install --disable-binary "$BUILD_RUBY_VERSION"; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm install "$BUILD_RUBY_VERSION"; fi
- |
  if [[ "$TRAVIS_OS_NAME" != "windows" ]]
  then
    rvm use "$BUILD_RUBY_VERSION"
    mkdir -p target/debug/deps
    cp $(ruby -e 'puts File.join(RbConfig::CONFIG["libdir"], RbConfig::CONFIG["LIBRUBY_ALIASES"].split(" ").first)') target/debug/deps
  fi
- ruby --version
- ruby -e 'require "pp"; pp RbConfig::CONFIG'
- rustc -Vv
- cargo -Vv

matrix:
  allow_failures:
    - rust: beta
    - rust: nightly
    - env: RUBY_STATIC=true BUILD_RUBY_VERSION=2.5.1
    - os: windows
      rust: stable
      env: BUILD_RUBY_VERSION=2.5.1
  include:
    - os: linux
      rust: stable
      env: RUBY_STATIC=true BUILD_RUBY_VERSION=2.5.1
    - os: osx
      rust: stable
      env: RUBY_STATIC=true BUILD_RUBY_VERSION=2.5.1
    - os: windows
      rust: stable
      env: BUILD_RUBY_VERSION=2.5.1

before_script:
- export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH

script:
- |
  cargo build -vv &&
  cargo test -vv

after_script:
- cat target/debug/build/rutie-*/output
- cat target/debug/build/rutie-*/stderr

env:
  global:
    - RUST_BACKTRACE=full
    - CI_STDERR_LOG=true
  matrix:
    - BUILD_RUBY_VERSION: 2.3.7
    - BUILD_RUBY_VERSION: 2.4.4
    - BUILD_RUBY_VERSION: 2.5.1
